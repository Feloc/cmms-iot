services:
  db:
    image: timescale/timescaledb:2.17.2-pg15
    container_name: cmms_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: cmms_mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf

  api:
    build: ./apps/api
    container_name: cmms_api
    env_file: .env
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_started
    volumes:
      - ./apps/api:/app
      - /app/node_modules
      - ./storage/attachments:/app/storage/attachments
    command: sh -c "npx prisma generate && npm run start:dev"

  web:
    build: ./apps/web
    container_name: cmms_web
    environment:
      NEXTAUTH_URL: "http://localhost:3000"
      NEXTAUTH_SECRET: "supersecret_local_123"
      # Para llamadas del servidor (dentro del contenedor web) al API
      API_INTERNAL_URL: "http://api:3001"
      # Para el navegador del usuario hacia el API (cuando hagas fetch desde el cliente)
      NEXT_PUBLIC_API_URL: "http://localhost:3001"
    env_file: 
      - .env
      - ./apps/web/.env.local
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    command: sh -c "npm install --no-audit --no-fund && npm run dev"

volumes:
  db_data:
